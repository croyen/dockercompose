###########
# BUILDER #
###########

# pull official base image
FROM python:3.10.7-slim-buster as builder

# set work directory
WORKDIR /usr/src/app

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# install system dependencies
RUN apt-get update && \
    apt-get install -y --no-install-recommends gcc

# lint
RUN pip install --upgrade pip
RUN pip install flake8==5.0.4
COPY . /usr/src/app/
RUN flake8 --ignore=E501,F401 .

# install python dependencies
COPY ./requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/app/wheels -r requirements.txt


#########
# FINAL #
#########

# pull official base image
FROM python:3.10.7-slim-buster

ENV USER=app
ENV HOME=/home/$USER
ENV APP_HOME=$HOME/web
ENV PROJECT_FOLDER=$APP_HOME/project

# create directory for the app user
RUN mkdir -p $HOME

# create the app user
RUN addgroup --system $USER && adduser --system --group $USER

# create the appropriate directories
RUN mkdir -p $PROJECT_FOLDER
WORKDIR $APP_HOME

# install dependencies
RUN apt-get update && apt-get install -y --no-install-recommends netcat tree
COPY --from=builder /usr/src/app/wheels /wheels
COPY --from=builder /usr/src/app/requirements.txt .
RUN pip install --upgrade pip
RUN pip install --no-cache /wheels/*

# copy entrypoint
COPY ./entrypoint.sh $APP_HOME
# copy wsgi
COPY ./manage.py $APP_HOME
# copy project
COPY ./project $PROJECT_FOLDER

# chown all the files to the app user
RUN chown -R $USER:$USER $APP_HOME

# change to the app user
USER $USER

# run entrypoint.prod.sh
ENTRYPOINT ["/home/app/web/entrypoint.sh"]

